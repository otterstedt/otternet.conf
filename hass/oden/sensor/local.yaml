- platform: imap_email_content
  server: imap.gmail.com
  name: bedroom_heat_requested
  port: 993
  username: !secret gmail_user
  password: !secret gmail_password
  senders:
    - !secret ka_email
    - !secret gmail_user
  value_template: >-
    {% if 'heat bedroom please' in (subject | lower) %}
      up
    {% elif 'cool bedroom please' in (subject | lower) %}
      down
    {% else %}
      off
    {% endif %}
- platform: imap
  server: imap.gmail.com
  port: 993
  username: !secret gmail_user
  password: !secret gmail_password
#- platform: season
#  name: Season
- platform: time_date
  display_options:
    - 'time'
    - 'date'
    - 'date_time'
    - 'date_time_utc'
    - 'date_time_iso'
    - 'time_date'
    - 'time_utc'
    - 'beat'
- platform: template
  sensors:
    timetopoubelle:
      friendly_name: Days to Poubelle
      entity_id: sensor.time
      value_template: >-
        {% if states.calendar.marbleton_poubelle.attributes.start_time %}
          {{((as_timestamp(states.calendar.marbleton_poubelle.attributes.start_time) - as_timestamp(states('sensor.date_time_iso')) ) / ( 60 * 60 * 24 ) ) | default(99) | round(2, 'common') }}
        {%- else -%}
          None
        {%- endif %}
    timetorecyclage:
      friendly_name: Days to Recyclage
      entity_id: sensor.time
      value_template: >-
        {% if states.calendar.marbleton_recyclage.attributes.start_time %}
          {{((as_timestamp(states.calendar.marbleton_recyclage.attributes.start_time) - as_timestamp(states('sensor.date_time_iso')) ) / ( 60 * 60 * 24 ) ) | default(99) | round(2, 'common') }}
        {%- else -%}
          None
        {%- endif %}
    timetocompost:
      friendly_name: Days to Compost
      entity_id: sensor.time
      value_template: >-
        {% if states.calendar.dudswell_compost.attributes.start_time %}
          {{((as_timestamp(states.calendar.dudswell_compost.attributes.start_time) - as_timestamp(states('sensor.date_time_iso')) ) / ( 60 * 60 * 24 ) ) | default(99) | round(2, 'common') }}
        {%- else -%}
          None
        {%- endif %}
    timetogrosbut:
      friendly_name: Days to Gros But
      entity_id: sensor.time
      value_template: >-
        {% if states.calendar.marbleton_gros_rebut.attributes.start_time %}
          {{((as_timestamp(states.calendar.marbleton_gros_rebut.attributes.start_time) - as_timestamp(states('sensor.date_time_iso')) ) / ( 60 * 60 * 24 ) ) | default(99) | round(2, 'common') }}
        {%- else -%}
          None
        {%- endif %}
    timetoecocentre:
      friendly_name: Days to Eco Centre
      entity_id: sensor.time
      value_template: >-
        {% if states.calendar.dudswell_ecocentre.attributes.start_time %}
          {{((as_timestamp(states.calendar.dudswell_ecocentre.attributes.start_time) - as_timestamp(states('sensor.date_time_iso')) ) / ( 60 * 60 * 24 ) ) | default(99) | round(2, 'common') }}
        {%- else -%}
          None
        {%- endif %}
    timetoventegarage:
      friendly_name: Days to Vente de Garage
      entity_id: sensor.time
      value_template: >-
        {% if states.calendar.dudswell_vente_garage.attributes.start_time %}
          {{((as_timestamp(states.calendar.dudswell_vente_garage.attributes.start_time) - as_timestamp(states('sensor.date_time_iso')) ) / ( 60 * 60 * 24 ) ) | default(99) | round(2, 'common') }}
        {%- else -%}
          None
        {%- endif %}
- platform: command_line
  name: ICT Instance
  json_attributes:
    - Reservations
  command: !secret aws_instance_ict_status_command
  value_template: '{{ value_json.Reservations[0].Instances[0].State.Name }}'
- platform: command_line
  name: Tools Instance
  json_attributes:
    - Reservations
  command: !secret aws_instance_tools_status_command
  value_template: '{{ value_json.Reservations[0].Instances[0].State.Name }}'
- platform: opensky
  radius: 15
  name: silversky
- platform: template
  sensors:
    dclxvi_odometer_10k:
      value_template: '{{  ((states.sensor.xc40_odometer.state | int) - 55983)  % 10000 }}'
      friendly_name: '10k odometer'
      unit_of_measurement: 'km'
    dclxvi_odometer_insurance_period:
      value_template: '{{  ((states.sensor.xc40_odometer.state | int) - 205810) }}'
      friendly_name: 'Insurance Period Odometer'
      unit_of_measurement: 'km'
    to_home_dclxvi_diff:
      value_template: '{{  (((states.sensor.dclxvi_to_home.state | float) -  (states.sensor.dclxvi_to_home_usual.state | float))  | int)}}'
      friendly_name: 'DCLXVI to Home Difference'
      unit_of_measurement: 'min'
    dclxvi_tracker_last_seen_duration:
      value_template: "{{ ((as_timestamp(now()) - (state_attr('sensor.xc40_tracker_last_seen', 'timestamp') | int )) / 3600) | round(2) }}"
      entity_id: 
        - sensor.dclxvi_tracker_last_seen
      friendly_name: DCXLVI Tracker Since Last Seen
      unit_of_measurement: Hours
    dclxvi_tracker_speed_coordinates:
      value_template: "{{ (state_attr('sensor.xc40_tracker_speed', 'latitude'), state_attr('sensor.xc40_tracker_speed', 'longitude')) | join(',') }}"
      friendly_name: DCLXVI Tracker Speed Coordinates
      unit_of_measurement: DD
    dclxvi_tracker_speed_temp:
      value_template: "{{ state_attr('sensor.xc40_tracker_speed', 'temp') }}"
      friendly_name: DCLXVI Tracker Speed Temperature
      unit_of_measurement: C
    dclxvi_tracker_speed_pressure:
      value_template: "{{ state_attr('sensor.xc40_tracker_speed', 'pressure') }}"
      friendly_name: DCLXVI Tracker Speed Pressure
      unit_of_measurement: bar
    dclxvi_tracker_speed_humidity:
      value_template: "{{ state_attr('sensor.xc40_tracker_speed', 'humidity') }}"
      friendly_name: DCLXVI Tracker Speed Humidity
      unit_of_measurement: '%'
- platform: gpsd
  name: DCLXVI Remote GPS
  host: 10.0.1.80
  port: 2947